<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | My Octopress Blog]]></title>
  <link href="http://www.changchen.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://www.changchen.com/"/>
  <updated>2014-04-29T17:49:40+08:00</updated>
  <id>http://www.changchen.com/</id>
  <author>
    <name><![CDATA[Daya]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[cousera_Mini-project # 4 - Pong]]></title>
    <link href="http://www.changchen.com/blog/20140429/cousera-pong/"/>
    <updated>2014-04-29T16:27:47+08:00</updated>
    <id>http://www.changchen.com/blog/20140429/cousera-pong</id>
    <content type="html"><![CDATA[<blockquote><p> 《An Introduction to Interactive Programming in Python》</p></blockquote>

<p>**小游戏~&ldquo;Pong&rdquo; <br/>
这次时间还是挺充裕的，但是看英文看的头大，就没按步骤写了 <br/>
结果花了更多的时间   还写错了一些  <br/>
下次还是认真按步骤写好了</p>

<p>我做的： <br/>
<img src="\images\blog\140430_cousera\1.png" alt="ico_topitme" /></p>

<p>改作业改到一个做的好有创意： 评语评了一句碉堡了 <br/>
不知道看懂看不懂 哈哈 <br/>
<img src="\images\blog\140430_cousera\2.png" alt="ico_topitme" /></p>

<!--more-->


<p>可以在<a href="http://www.codeskulptor.org/">codeskullptor</a>上运行 <br/>
code: <br/>
```python</p>

<h1>Implementation of classic arcade game Pong</h1>

<p>import simplegui
import random</p>

<h1>initialize globals &ndash; pos and vel encode vertical info for paddles</h1>

<p>WIDTH = 600
HEIGHT = 400     <br/>
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True</p>

<h1>initialize ball_pos and ball_vel for new bal in middle of table</h1>

<h1>if direction is RIGHT, the ball&rsquo;s velocity is upper right, else upper left</h1>

<p>def spawn_ball(direction):</p>

<pre><code>global ball_pos, ball_vel # these are vectors stored as lists
ball_pos = [WIDTH/2, HEIGHT/2]
ball_vel = [random.randrange(1, 2)*2, random.randrange(-2, 2)+0.5]
if(direction == "LEFT"):    ball_vel[0] = -ball_vel[0]
</code></pre>

<h1>define event handlers</h1>

<p>def new_game():</p>

<pre><code>global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
paddle1_pos = [HALF_PAD_WIDTH, HEIGHT / 2]
paddle2_pos = [WIDTH - HALF_PAD_WIDTH, HEIGHT / 2]
global score1, score2  # these are ints
score1 = 0
score2 = 0
paddle2_vel = 0
paddle1_vel = 0
spawn_ball(random.choice(["LEFT", "RIGHT"]))
</code></pre>

<p>def draw(canvas):</p>

<pre><code>global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel
global paddle2_vel, paddle1_vel


# draw mid line and gutters
canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")

# update ball
ball_pos[0] += ball_vel[0]
ball_pos[1] += ball_vel[1]      

# draw ball
canvas.draw_circle(ball_pos, BALL_RADIUS, 2, "Red", "White")

# update paddle's vertical position, keep paddle on the screen
if(ball_pos[1] + BALL_RADIUS &gt;= HEIGHT or ball_pos[1] - BALL_RADIUS &lt;= 0):
    ball_vel[1] = -ball_vel[1]

# draw paddles
canvas.draw_polyline([[HALF_PAD_WIDTH, paddle1_pos[1]-HALF_PAD_HEIGHT], 
                      [HALF_PAD_WIDTH, paddle1_pos[1]+HALF_PAD_HEIGHT]], 
                     PAD_WIDTH, 'Red')
paddle1_pos[1] += paddle1_vel

canvas.draw_polyline([[WIDTH - HALF_PAD_WIDTH, paddle2_pos[1]-HALF_PAD_HEIGHT], 
                      [WIDTH - HALF_PAD_WIDTH, paddle2_pos[1]+HALF_PAD_HEIGHT]], 
                     PAD_WIDTH, 'Red')
paddle2_pos[1] += paddle2_vel

if paddle1_pos[1] + HALF_PAD_HEIGHT &gt;= HEIGHT:
    paddle1_pos[1] = HEIGHT - HALF_PAD_HEIGHT
    paddle1_vel = 0
if paddle1_pos[1] - HALF_PAD_HEIGHT &lt;= 0:
    paddle1_pos[1] = HALF_PAD_HEIGHT
    paddle1_vel = 0

if paddle2_pos[1] + HALF_PAD_HEIGHT &gt;= HEIGHT:
    paddle2_pos[1] = HEIGHT - HALF_PAD_HEIGHT
    paddle2_vel = 0
if paddle2_pos[1] - HALF_PAD_HEIGHT &lt;= 0:
    paddle2_pos[1] = HALF_PAD_HEIGHT
    paddle2_vel = 0

if(ball_pos[1] &lt; paddle1_pos[1] + HALF_PAD_HEIGHT and
   ball_pos[1] &gt; paddle1_pos[1] - HALF_PAD_HEIGHT and
   ball_pos[0] &lt;=  BALL_RADIUS + PAD_WIDTH):
    ball_vel[0] = -ball_vel[0]
    ball_vel[0] *= 1.2
    ball_vel[1] *= 1.2
elif(ball_pos[0] &lt;  -1*BALL_RADIUS):
    score2 += 1
    spawn_ball(random.choice(["LEFT", "RIGHT"]))

if(ball_pos[1] &lt; paddle2_pos[1] + HALF_PAD_HEIGHT and
   ball_pos[1] &gt; paddle2_pos[1] - HALF_PAD_HEIGHT and
   ball_pos[0] &gt;= WIDTH - BALL_RADIUS - PAD_WIDTH):

    ball_vel[0] = -ball_vel[0] 
    ball_vel[0] *= 1.2
    ball_vel[1] *= 1.2
elif(ball_pos[0] &gt;= WIDTH + BALL_RADIUS):
    score1 += 1
    spawn_ball(random.choice(["LEFT", "RIGHT"]))
# draw scores
canvas.draw_text(str(score1), [50, 50], 50, 'Blue', 'serif')
canvas.draw_text(str(score2), [500, 50], 50, 'Blue', 'serif')
</code></pre>

<p>def keydown(key):</p>

<pre><code>global paddle1_vel, paddle2_vel
acc = 1
if key==simplegui.KEY_MAP["s"]:
    paddle1_vel += acc
elif key==simplegui.KEY_MAP["w"]:
    paddle1_vel -= acc
elif key==simplegui.KEY_MAP["down"]:
    paddle2_vel += acc
elif key==simplegui.KEY_MAP["up"]:
    paddle2_vel -= acc
</code></pre>

<p>def keyup(key):</p>

<pre><code>global paddle1_vel, paddle2_vel
</code></pre>

<p>def button_handler():</p>

<pre><code>new_game()
</code></pre>

<h1>create frame</h1>

<p>frame = simplegui.create_frame(&ldquo;Pong&rdquo;, WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
frame.add_button(&lsquo;Reset&rsquo;, button_handler, 60)</p>

<h1>start frame</h1>

<p>new_game()
frame.start()
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux中安装python的egg包]]></title>
    <link href="http://www.changchen.com/blog/20140424/linux-python-egg-install/"/>
    <updated>2014-04-24T11:28:48+08:00</updated>
    <id>http://www.changchen.com/blog/20140424/linux-python-egg-install</id>
    <content type="html"><![CDATA[<h4>NetworkX的使用:<a href="http://blog.sciencenet.cn/blog-404069-337442.html" title="NetworkX">http://blog.sciencenet.cn/blog-404069-337442.html</a></h4>

<p>首先到<a href="http://pypi.python.org/pypi/networkx/">http://pypi.python.org/pypi/networkx/</a>下载
networkx-1.1-py2.6.egg   <br/>
然后下载 setuptools:<a href="https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea">setuptools-0.6c11-py2.7.egg (md5)</a></p>

<h3>1. 安装setuptools</h3>

<p><img src="\images\blog\140424_python_egg\1.png" alt="ico_topitme" /></p>

<h3>2. 安装networkx</h3>

<p><img src="\images\blog\140424_python_egg\2.png" alt="ico_topitme" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cousera作业_Guess the Number]]></title>
    <link href="http://www.changchen.com/blog/20140413/cousera-python-week3/"/>
    <updated>2014-04-13T21:03:09+08:00</updated>
    <id>http://www.changchen.com/blog/20140413/cousera-python-week3</id>
    <content type="html"><![CDATA[<blockquote><p> 《An Introduction to Interactive Programming in Python》</p></blockquote>

<p><strong>哎   半夜把第三周的大作业写完了     差点来不及  </strong></p>

<!--more-->


<p>一个二分法猜数字的小游戏       都给出提示了    照着写就行了 <br/>
可是用的是codeskullptor，还要翻个墙    心酸。</p>

<p>```python</p>

<h1>template for &ldquo;Guess the number&rdquo; mini-project</h1>

<h1>input will come from buttons and an input field</h1>

<h1>all output for the game will be printed in the console</h1>

<p>import simplegui
import random
import math</p>

<h1>initialize global variables used in your code</h1>

<p>secret_number = 0
remain = 0</p>

<h1>define event handlers for control panel</h1>

<p>def range100():</p>

<pre><code># button that changes range to range [0,100) and restarts

print "New game. Range is from 0 to 100"
print "Number of remaining guesses is 7"

global secret_number, remain
secret_number = random.randrange(0, 100)
remain = 7
print 
</code></pre>

<p>def range1000():</p>

<pre><code># button that changes range to range [0,1000) and restarts

print "New game. Range is from 0 to 1000"
print "Number of remaining guesses is 10"

global secret_number, remain
secret_number = random.randrange(0, 1000)
remain = 10
print
</code></pre>

<h1>helper function to start and restart the game</h1>

<p>def new_game():</p>

<pre><code> range100()
</code></pre>

<p>def input_guess(guess):</p>

<pre><code># main game logic goes here 
global remain
print "Guess was " + guess


guess = int(guess)
if guess &gt; secret_number:
    print "Lower!"
elif guess &lt; secret_number:
    print "Higher!"
else:
    print "Correct!\n"
    new_game()
remain = remain - 1
print "Number of remaining guesses is %d"%(remain) 

if remain == 0:
    print "sorry u run out of range, the num is %d"%secret_number
    new_game()

print
</code></pre>

<h1>Handler to draw on canvas</h1>

<p>def draw(canvas):</p>

<pre><code>canvas.draw_text(message, [50,112], 48, "Red")
</code></pre>

<h1>create frame</h1>

<p>f = simplegui.create_frame(&ldquo;Home&rdquo;, 300, 200)</p>

<h1>register event handlers for control elements</h1>

<p>f.add_button(&ldquo;Range is [0, 100)&rdquo;, range100, 200)
f.add_button(&ldquo;Range is [0, 1000)&rdquo;, range1000, 200)
f.add_input(&ldquo;Enter a guess&rdquo;, input_guess, 200)</p>

<h1>call new_game and start frame</h1>

<p>f.start()
new_game()</p>

<h1>always remember to check your completed program against the grading rubric</h1>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cousera-学习记录-Week2]]></title>
    <link href="http://www.changchen.com/blog/20140407/cousera-week2/"/>
    <updated>2014-04-07T13:44:25+08:00</updated>
    <id>http://www.changchen.com/blog/20140407/cousera-week2</id>
    <content type="html"><![CDATA[<h1>欢迎使用 Cmd &ndash; 在线 Markdown 编辑阅读器</h1>

<hr />

<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。</p>

<p>您可以使用 Cmd Makrdown：</p>

<blockquote><ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>

<p>这是一份 Cmd Markdown 的欢迎稿兼使用说明，请保留，如需撰写 <strong>新稿件</strong>，点击顶部工具栏右侧的 <code>新建文本</code> 图标或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>

<hr />

<!--more-->


<h2>什么是 Markdown</h2>

<p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>

<ul>
<li>书写一个质能守恒公式<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>：</li>
</ul>


<p>$$E=mc<sup>2</sup>$$</p>

<ul>
<li>或者高亮一段代码<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>：</li>
</ul>


<p>```
python
@requires_authorization
class SomeClass:</p>

<pre><code>pass
</code></pre>

<p>if <strong>name</strong> == &lsquo;<strong>main</strong>&rsquo;:</p>

<pre><code># A comment
print 'hello world'
</code></pre>

<p>```</p>

<p>想要了解更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-%E9%AB%98%E9%98%B6%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C">Cmd Markdown 高阶语法手册</a> 以使用更多功能。</p>

<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：您只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 它目前已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>

<hr />

<h2>什么是 Cmd Markdown</h2>

<p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p>

<h3>1. 实时同步预览</h3>

<p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>

<h3>2. 编辑工具栏</h3>

<p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>

<p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor" /></p>

<h3>3. 编辑模式</h3>

<p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右测的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>

<h3>4. 实时的云端文稿</h3>

<p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>

<h3>5. 离线模式</h3>

<p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>

<h3>6. 管理工具栏</h3>

<p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>

<p><img src="https://www.zybuluo.com/static/img/toolbar-manager-2.png" alt="tool-manager" /></p>

<p>工具栏上的五个图标依次为：</p>

<ul>
<li><code>立即发布</code>：将当前的文稿生成到固定链接，在网络上发布这个链接，分享您的文稿</li>
<li><code>新建文本</code>：开始撰写一篇新的文稿</li>
<li><code>删除文本</code>：删除当前的文稿</li>
<li><code>导出文本</code>：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地</li>
<li><code>文稿列表</code>：所有新增和过往的文稿都可以在这里查看、操作</li>
</ul>


<h3>7. 阅读工具栏</h3>

<p><img src="https://www.zybuluo.com/static/img/toolbar-reader-2.png" alt="tool-manager" /></p>

<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>

<p>工具栏上的四个图标依次为：</p>

<ul>
<li><code>内容目录</code>：快速导航当前文稿的目录结构以跳转到感兴趣的段落</li>
<li><code>主题切换</code>：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！</li>
<li><code>阅读模式</code>：心无旁骛的阅读模式提供超一流的阅读体验</li>
<li><code>全屏模式</code>：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</li>
</ul>


<h3>8. 阅读模式</h3>

<p>在 <strong>阅读工具栏</strong> 点击 <code>阅读模式</code> 图标或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升您阅读的体验和品质。尝试进入阅读模式，感受这份诚意。</p>

<h3>9. 文稿发布和分享</h3>

<p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <code>立即发布</code> 图标发布这份文档给好友吧！</p>

<hr />

<p>再一次感谢您花费时间阅读这份欢迎稿，<code>新建文本(Ctrl+Alt+N)</code> 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>

<p>作者 <a href="http://weibo.com/ghosert">@ghosert</a>   <br/>
于 2014 年 03月 07日  <br/>
上海</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 [MathJax][4] 参考更多使用方法。<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
