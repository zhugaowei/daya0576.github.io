<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | 你是我的小呀小苹果~]]></title>
  <link href="http://www.changchen.me/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://www.changchen.me/"/>
  <updated>2014-09-18T00:17:01+08:00</updated>
  <id>http://www.changchen.me/</id>
  <author>
    <name><![CDATA[Daya]]></name>
    <email><![CDATA[daya0576@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[爬教务处成绩代码log]]></title>
    <link href="http://www.changchen.me/blog/20140801/cal-uni-score/"/>
    <updated>2014-08-01T00:05:13+08:00</updated>
    <id>http://www.changchen.me/blog/20140801/cal-uni-score</id>
    <content type="html"><![CDATA[<blockquote><p>打包好的exe：<a href="http://pan.baidu.com/s/1nt9eTYh">http://pan.baidu.com/s/1nt9eTYh</a> <br/>
源代码在github上:<a href="https://github.com/daya0576/140730-Tianji_Polytechnic_uni_cal_score">python代码</a> <br/>
<a href="https://github.com/daya0576/140730-Tianji_Polytechnic_uni_cal_score.git">https://github.com/daya0576/140730-Tianji_Polytechnic_uni_cal_score.git</a></p></blockquote>

<h2>代码有由3部分组成</h2>

<ol>
<li>用urllib登陆教务处，返回html</li>
<li>用beautifulsoup对html的parse</li>
<li>最后用p2exe打包为可执行文件</li>
</ol>


<!--more-->


<p>以前写过一个登陆教务处网站的小程序。 <br/>
写程序中大部分的时间都用到乱码的处理和beautifulsoup的使用了&hellip; <br/>
还有py2exe的安装学习 <br/>
真的是浪费了 好多时间，如果有好的规划，应该会节省更多时间吧、</p>

<h3>&mdash;-最后的结果&mdash;&ndash;</h3>

<p><img src="/images/blog/140801_web_score_log/console.jpg" alt="" /> <br/>
<img src="/images/blog/140801_web_score_log/result.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cousera_comments总和]]></title>
    <link href="http://www.changchen.me/blog/20140429/cousera-comments/"/>
    <updated>2014-04-29T17:29:28+08:00</updated>
    <id>http://www.changchen.me/blog/20140429/cousera-comments</id>
    <content type="html"><![CDATA[<blockquote><p> 《An Introduction to Interactive Programming in Python》</p></blockquote>

<p>突然想去看看之前mini_project别人给我的评价  <br/>
不看不知道  一看吓一跳  <br/>
感动的都要哭了 T ^ T <br/>
敢不敢再负责一点</p>

<!--more-->


<ul>
<li><p>Mini-project # 1 &ndash; Rock-paper-scissors-lizard-Spock <br/>
<img src="\images\blog\140430_cousera\3.png" alt="ico_topitme" /> <br/>
<img src="\images\blog\140430_cousera\4.png" alt="ico_topitme" /></p></li>
<li><p>Mini-project # 2 &ndash; &ldquo;Guess the number&rdquo; game" <br/>
<img src="\images\blog\140430_cousera\5.png" alt="ico_topitme" />   <br/>
<img src="\images\blog\140430_cousera\6.png" alt="ico_topitme" /> <br/>
<img src="\images\blog\140430_cousera\7.png" alt="ico_topitme" /></p></li>
<li><p>Mini-project # 4 &ndash; &ldquo;Pong&rdquo; <br/>
<img src="\images\blog\140430_cousera\4_1.png" alt="ico_topitme" />   <br/>
<img src="\images\blog\140430_cousera\4_2.png" alt="ico_topitme" /></p></li>
</ul>


<h4>&ldquo;:&ndash;) All the best.&rdquo;</h4>

<h4>继续加油   以后改作业也要更认真一点了</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cousera_Mini-project # 4 - Pong]]></title>
    <link href="http://www.changchen.me/blog/20140429/cousera-pong/"/>
    <updated>2014-04-29T16:27:47+08:00</updated>
    <id>http://www.changchen.me/blog/20140429/cousera-pong</id>
    <content type="html"><![CDATA[<blockquote><p> 《An Introduction to Interactive Programming in Python》</p></blockquote>

<p>**小游戏~&ldquo;Pong&rdquo; <br/>
这次时间还是挺充裕的，但是看英文看的头大，就没按步骤写了 <br/>
结果花了更多的时间   还写错了一些  <br/>
下次还是认真按步骤写好了</p>

<p>我做的： <br/>
<img src="\images\blog\140430_cousera\1.png" alt="ico_topitme" /></p>

<p>改作业改到一个做的好有创意： 评语评了一句碉堡了 <br/>
不知道看懂看不懂 哈哈 <br/>
<img src="\images\blog\140430_cousera\2.png" alt="ico_topitme" /></p>

<!--more-->


<p>可以在<a href="http://www.codeskulptor.org/">codeskullptor</a>上运行 <br/>
code: <br/>
```python</p>

<h1>Implementation of classic arcade game Pong</h1>

<p>import simplegui
import random</p>

<h1>initialize globals &ndash; pos and vel encode vertical info for paddles</h1>

<p>WIDTH = 600
HEIGHT = 400     <br/>
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True</p>

<h1>initialize ball_pos and ball_vel for new bal in middle of table</h1>

<h1>if direction is RIGHT, the ball&rsquo;s velocity is upper right, else upper left</h1>

<p>def spawn_ball(direction):</p>

<pre><code>global ball_pos, ball_vel # these are vectors stored as lists
ball_pos = [WIDTH/2, HEIGHT/2]
ball_vel = [random.randrange(1, 2)*2, random.randrange(-2, 2)+0.5]
if(direction == "LEFT"):    ball_vel[0] = -ball_vel[0]
</code></pre>

<h1>define event handlers</h1>

<p>def new_game():</p>

<pre><code>global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
paddle1_pos = [HALF_PAD_WIDTH, HEIGHT / 2]
paddle2_pos = [WIDTH - HALF_PAD_WIDTH, HEIGHT / 2]
global score1, score2  # these are ints
score1 = 0
score2 = 0
paddle2_vel = 0
paddle1_vel = 0
spawn_ball(random.choice(["LEFT", "RIGHT"]))
</code></pre>

<p>def draw(canvas):</p>

<pre><code>global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel
global paddle2_vel, paddle1_vel


# draw mid line and gutters
canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")

# update ball
ball_pos[0] += ball_vel[0]
ball_pos[1] += ball_vel[1]      

# draw ball
canvas.draw_circle(ball_pos, BALL_RADIUS, 2, "Red", "White")

# update paddle's vertical position, keep paddle on the screen
if(ball_pos[1] + BALL_RADIUS &gt;= HEIGHT or ball_pos[1] - BALL_RADIUS &lt;= 0):
    ball_vel[1] = -ball_vel[1]

# draw paddles
canvas.draw_polyline([[HALF_PAD_WIDTH, paddle1_pos[1]-HALF_PAD_HEIGHT], 
                      [HALF_PAD_WIDTH, paddle1_pos[1]+HALF_PAD_HEIGHT]], 
                     PAD_WIDTH, 'Red')
paddle1_pos[1] += paddle1_vel

canvas.draw_polyline([[WIDTH - HALF_PAD_WIDTH, paddle2_pos[1]-HALF_PAD_HEIGHT], 
                      [WIDTH - HALF_PAD_WIDTH, paddle2_pos[1]+HALF_PAD_HEIGHT]], 
                     PAD_WIDTH, 'Red')
paddle2_pos[1] += paddle2_vel

if paddle1_pos[1] + HALF_PAD_HEIGHT &gt;= HEIGHT:
    paddle1_pos[1] = HEIGHT - HALF_PAD_HEIGHT
    paddle1_vel = 0
if paddle1_pos[1] - HALF_PAD_HEIGHT &lt;= 0:
    paddle1_pos[1] = HALF_PAD_HEIGHT
    paddle1_vel = 0

if paddle2_pos[1] + HALF_PAD_HEIGHT &gt;= HEIGHT:
    paddle2_pos[1] = HEIGHT - HALF_PAD_HEIGHT
    paddle2_vel = 0
if paddle2_pos[1] - HALF_PAD_HEIGHT &lt;= 0:
    paddle2_pos[1] = HALF_PAD_HEIGHT
    paddle2_vel = 0

if(ball_pos[1] &lt; paddle1_pos[1] + HALF_PAD_HEIGHT and
   ball_pos[1] &gt; paddle1_pos[1] - HALF_PAD_HEIGHT and
   ball_pos[0] &lt;=  BALL_RADIUS + PAD_WIDTH):
    ball_vel[0] = -ball_vel[0]
    ball_vel[0] *= 1.2
    ball_vel[1] *= 1.2
elif(ball_pos[0] &lt;  -1*BALL_RADIUS):
    score2 += 1
    spawn_ball(random.choice(["LEFT", "RIGHT"]))

if(ball_pos[1] &lt; paddle2_pos[1] + HALF_PAD_HEIGHT and
   ball_pos[1] &gt; paddle2_pos[1] - HALF_PAD_HEIGHT and
   ball_pos[0] &gt;= WIDTH - BALL_RADIUS - PAD_WIDTH):

    ball_vel[0] = -ball_vel[0] 
    ball_vel[0] *= 1.2
    ball_vel[1] *= 1.2
elif(ball_pos[0] &gt;= WIDTH + BALL_RADIUS):
    score1 += 1
    spawn_ball(random.choice(["LEFT", "RIGHT"]))
# draw scores
canvas.draw_text(str(score1), [50, 50], 50, 'Blue', 'serif')
canvas.draw_text(str(score2), [500, 50], 50, 'Blue', 'serif')
</code></pre>

<p>def keydown(key):</p>

<pre><code>global paddle1_vel, paddle2_vel
acc = 1
if key==simplegui.KEY_MAP["s"]:
    paddle1_vel += acc
elif key==simplegui.KEY_MAP["w"]:
    paddle1_vel -= acc
elif key==simplegui.KEY_MAP["down"]:
    paddle2_vel += acc
elif key==simplegui.KEY_MAP["up"]:
    paddle2_vel -= acc
</code></pre>

<p>def keyup(key):</p>

<pre><code>global paddle1_vel, paddle2_vel
</code></pre>

<p>def button_handler():</p>

<pre><code>new_game()
</code></pre>

<h1>create frame</h1>

<p>frame = simplegui.create_frame(&ldquo;Pong&rdquo;, WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
frame.add_button(&lsquo;Reset&rsquo;, button_handler, 60)</p>

<h1>start frame</h1>

<p>new_game()
frame.start()
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux中安装python的egg包]]></title>
    <link href="http://www.changchen.me/blog/20140424/linux-python-egg-install/"/>
    <updated>2014-04-24T11:28:48+08:00</updated>
    <id>http://www.changchen.me/blog/20140424/linux-python-egg-install</id>
    <content type="html"><![CDATA[<h4>NetworkX的使用:<a href="http://blog.sciencenet.cn/blog-404069-337442.html" title="NetworkX">http://blog.sciencenet.cn/blog-404069-337442.html</a></h4>

<p>首先到<a href="http://pypi.python.org/pypi/networkx/">http://pypi.python.org/pypi/networkx/</a>下载
networkx-1.1-py2.6.egg   <br/>
然后下载 setuptools:<a href="https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea">setuptools-0.6c11-py2.7.egg (md5)</a></p>

<h3>1. 安装setuptools</h3>

<p><img src="\images\blog\140424_python_egg\1.png" alt="ico_topitme" /></p>

<h3>2. 安装networkx</h3>

<p><img src="\images\blog\140424_python_egg\2.png" alt="ico_topitme" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cousera作业_Guess the number]]></title>
    <link href="http://www.changchen.me/blog/20140413/cousera-python-week3/"/>
    <updated>2014-04-13T21:03:09+08:00</updated>
    <id>http://www.changchen.me/blog/20140413/cousera-python-week3</id>
    <content type="html"><![CDATA[<blockquote><p> 《An Introduction to Interactive Programming in Python》</p></blockquote>

<p><strong>哎   半夜把第三周的大作业写完了     差点来不及  </strong></p>

<!--more-->


<p>一个二分法猜数字的小游戏       都给出提示了    照着写就行了 <br/>
可是用的是codeskullptor，还要翻个墙    心酸。</p>

<p>```python</p>

<h1>template for &ldquo;Guess the number&rdquo; mini-project</h1>

<h1>input will come from buttons and an input field</h1>

<h1>all output for the game will be printed in the console</h1>

<p>import simplegui
import random
import math</p>

<h1>initialize global variables used in your code</h1>

<p>secret_number = 0
remain = 0</p>

<h1>define event handlers for control panel</h1>

<p>def range100():</p>

<pre><code># button that changes range to range [0,100) and restarts

print "New game. Range is from 0 to 100"
print "Number of remaining guesses is 7"

global secret_number, remain
secret_number = random.randrange(0, 100)
remain = 7
print 
</code></pre>

<p>def range1000():</p>

<pre><code># button that changes range to range [0,1000) and restarts

print "New game. Range is from 0 to 1000"
print "Number of remaining guesses is 10"

global secret_number, remain
secret_number = random.randrange(0, 1000)
remain = 10
print
</code></pre>

<h1>helper function to start and restart the game</h1>

<p>def new_game():</p>

<pre><code> range100()
</code></pre>

<p>def input_guess(guess):</p>

<pre><code># main game logic goes here 
global remain
print "Guess was " + guess


guess = int(guess)
if guess &gt; secret_number:
    print "Lower!"
elif guess &lt; secret_number:
    print "Higher!"
else:
    print "Correct!\n"
    new_game()
remain = remain - 1
print "Number of remaining guesses is %d"%(remain) 

if remain == 0:
    print "sorry u run out of range, the num is %d"%secret_number
    new_game()

print
</code></pre>

<h1>Handler to draw on canvas</h1>

<p>def draw(canvas):</p>

<pre><code>canvas.draw_text(message, [50,112], 48, "Red")
</code></pre>

<h1>create frame</h1>

<p>f = simplegui.create_frame(&ldquo;Home&rdquo;, 300, 200)</p>

<h1>register event handlers for control elements</h1>

<p>f.add_button(&ldquo;Range is [0, 100)&rdquo;, range100, 200)
f.add_button(&ldquo;Range is [0, 1000)&rdquo;, range1000, 200)
f.add_input(&ldquo;Enter a guess&rdquo;, input_guess, 200)</p>

<h1>call new_game and start frame</h1>

<p>f.start()
new_game()</p>

<h1>always remember to check your completed program against the grading rubric</h1>

<p>```</p>
]]></content>
  </entry>
  
</feed>
